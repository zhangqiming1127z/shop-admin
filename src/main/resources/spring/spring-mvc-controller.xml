<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
<!-- 对项目中的所有类进行扫描以完成Bean创建并进行自动注入。
         支持 @Controller、@Service 以及 @Repository 和 @Component -->
    <!-- 扫描项目中com.fh.shop.controller包下所有的类，从而使类中的@Controller注解生效 -->
    <context:component-scan base-package="com.fh.shop.controller"/>

    <!--
    jsp视图解析器，对模型视图名称的解析，即在模型视图名称添加前后缀
        如/view/welcome.jsp对应的视图名就是：welcome
        这个类在视图解析器链中一定要定义在其他视图的后面，因为它始终会返回一个视图
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 注解驱动 -->
    <mvc:annotation-driven />
    <!-- 静态文件访问,主要是让DispatcherServlet不拦截以下静态资源 -->
    <mvc:resources mapping="/js/**" location="/js/"/>
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 最大内存大小 -->
        <property name="maxInMemorySize" value="10240"/>
        <!-- 最大文件大小，-1为不限制大小 -->
        <property name="maxUploadSize" value="-1"/>
    </bean>
    <mvc:resources mapping="/img/**" location="/img/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>

    <mvc:interceptors>

        <mvc:interceptor>
            <!--拦截所有请求  -->
            <mvc:mapping path="/**" />
            <!-- 排除那些请求不被拦截 -->
            <mvc:exclude-mapping path="/js/**"/>
            <!-- 拦截器的实现类，里边定义是自定义的拦截规则 -->
            <bean class="com.fh.shop.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <context:annotation-config />
    <context:component-scan base-package="com.fh.shop.Aop" />

        <bean id="logAspect" class="com.fh.shop.Aop.LogAspect"></bean>
        <aop:config>
            <aop:aspect ref="logAspect">
                <aop:pointcut id="poincutId" expression="execution(* com.fh.shop.controller..*.add*(..))||execution(* com.fh.shop.controller..*.del*(..)) ||execution(* com.fh.shop.controller..*.updat*(..)) "></aop:pointcut>
                <aop:around method="roundMethod" pointcut-ref="poincutId"></aop:around>
            </aop:aspect>
        </aop:config>

</beans>
